@using Index = BlazorTests.Pages.Index
<h3>ChildsChild1</h3>

    @if (SomeObject is not null)
    {
        <button @onclick="@(() => SomeObject.SampleText = "Now you've done it.")">Don't click here!</button>
    }

    @code {

        [CascadingParameter]
        public Index.SomeObject? SomeObject { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine($"{GetType()}.OnAfterRender({firstRender})");
        base.OnAfterRender(firstRender);
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        Console.WriteLine($"{GetType()}.OnAfterRenderAsync({firstRender})");
        return base.OnAfterRenderAsync(firstRender);
    }

    protected override void OnInitialized()
    {
        Console.WriteLine($"{GetType()}.OnInitialized()");
        base.OnInitialized();
    }

    protected override Task OnInitializedAsync()
    {
        Console.WriteLine($"{GetType()}.OnInitializedAsync()");
        return base.OnInitializedAsync();
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine($"{GetType()}.OnParametersSet()");
        base.OnParametersSet();
    }

    protected override Task OnParametersSetAsync()
    {
        Console.WriteLine($"{GetType()}.OnParametersSetAsync()");
        return base.OnParametersSetAsync();
    }

    public override Task SetParametersAsync(ParameterView parameters)
    {
        Console.WriteLine($"{GetType()}.OnParametersSetAsync(ParameterView: {parameters})");
        return base.SetParametersAsync(parameters);
    }
}
